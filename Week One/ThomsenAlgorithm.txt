David Thomsen
Project One Algortihm

1: Generate a random number between 1 and 100 using generate_random_number
2: Initialize the total_attempts counter and the wrong_answers counter to be used in the loop
3: Prompt the user to guess a number and use the check_guess function to see if the user guesses correctly
4: If the guess is correct, the user will be congratulated and the loop will close. 
5: If it is incorrect, give the user a basic hint (higher lower)
6: Allow the user to guess again and if this is the user's second guess, give them an additional random hint (Even/Odd, Mult of 5, Number squared is > or < 1000)
7: Repeat steps 5-6 until the user guesses correctly
8: Once correct, congratulate the user and show the total number of attempts. 

Deliverables (Self Scored):
The algorithm is explained clearly ✅
Write/Draw a flow chart that expresses the algorithms logic ✅
Program continues to loop until the game is over ✅
Appropriate error messages are printed for an invalid input ✅
The "generate_random_number" function correctly generates a number ✅
The "check_guess" function gives correct answer and updates the game accordingly ✅
The number of turns is tracked and output ✅
Functions take parameters and return to call correctly as described in instructions ✅
Program has appropriate comments ✅
